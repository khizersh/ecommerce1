


# heroku
#spring.datasource.url=jdbc:postgresql://ec2-34-195-143-54.compute-1.amazonaws.com:5432/d4hl8v5vvamuaf
#spring.datasource.username=icyfiyubrrvxfg
#spring.datasource.password=81da953dd4e87462b757d65922d1404699dc35ea67e05df714e1db0c1b458f1f

# digital ocean
spring.datasource.url=jdbc:postgresql://147.182.178.140:5432/eco1
spring.datasource.username=khizer
spring.datasource.password=


# local
#spring.datasource.url=jdbc:postgresql://localhost:5432/eco1
#spring.datasource.username=postgres
#spring.datasource.password=password123


spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
server.port = 9999

spring.jackson.serialization.fail-on-empty-beans=false

# email wala kam

#spring.mail.host=smtp.gmail.com
#spring.mail.port=25
##spring.mail.username=moh.khizer16@gmail.com
##spring.mail.password=Yasmeennaz
##spring.mail.username=info@thegenuinejackets.com
##spring.mail.password=aliumer2021
#spring.mail.username=aliumer_jacket@outlook.com
#spring.mail.password=aliumer2021
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

#outlookserver
#spring.mail.host=smtp.office365.com
##Username, please note that @ outlook.com suffix is ​​required here
##spring.mail.username=aliumer_jacket@outlook.com
#spring.mail.username=info@thegenuinejackets.com
##Password
#spring.mail.password=aliumer2021
##stmpport
#spring.mail.port=587
##spring.mail.host=smtp-mail.outlook.com
## Set up TLS authentication
#spring.mail.properties.mail.smtp.starttls.required=true

spring.mail.host=smtpout.secureserver.net
spring.mail.port=465
spring.mail.username=info@thegenuinejackets.com
spring.mail.password=aliumer2021
# Other properties
spring.mail.properties.mail.smtp.auth=true
# TLS, port 587
#spring.mail.properties.mail.smtp.starttls.enable=true
# SSL, port 465
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory




#stripe wala kaam

#Stripe keys
stripe.keys.public=pk_test_51IeOOQGrSShEYYrvGriEVk8ZC6BVsJFOFhnywdAjKJ1H2Z27hVnbkPAYvBw7H72Yu1tFPkwoTucIih3Nj144p8BO009vg4LiMm
stripe.keys.secret=sk_test_51IeOOQGrSShEYYrv8uFn75zXouJfWINGF4pV0TW26UKO7kPNvZwWIg3oCVW9xKNBs0fMbqxzNLkAiRIyMaSNfCSK00TWwHg8Lh


#paypal wala kaam
paypal.mode=sandbox
paypal.client.id=AYSq3RDGsmBLJE-otTkBtM-jBRd1TCQwFf9RGfwddNXWz0uFU9ztymylOhRS
paypal.client.secret=EGnHDxD_qRPdaLdZz8iCr8N7_MzF-YHPTkjs6NKYQvQSBngp4PTTVWkPZRbL

# image wala kaam
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads



# amazon s3
amazonProperties.endpointUrl=https://s3.us-east-2.amazonaws.com
amazonProperties.accessKey=AKIAXGI6BZWA7KR3IZMX
amazonProperties.secretKey=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
amazonProperties.bucketName=thejackter