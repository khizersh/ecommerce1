


# heroku ecommerce
#spring.datasource.url=jdbc:postgresql://ec2-35-171-57-132.compute-1.amazonaws.com:5432/dkcddk40o3k41
#spring.datasource.username=avvueogqhtskhg
#spring.datasource.password=f2b900421763174b2b8477df5e548c66a3fd74a15d36129b45ff0215af3ce4c2


## local
spring.datasource.url=jdbc:postgresql://localhost:5432/eco1
spring.datasource.username=postgres
spring.datasource.password=password123


spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
server.port = 9999

spring.jackson.serialization.fail-on-empty-beans=false

# email wala kam

spring.mail.host=smtp.gmail.com
spring.mail.port=25
spring.mail.username=moh.khizer16@gmail.com
spring.mail.password=Yasmeennaz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


#stripe wala kaam

#Stripe keys
stripe.keys.public=pk_test_51IeOOQGrSShEYYrvGriEVk8ZC6BVsJFOFhnywdAjKJ1H2Z27hVnbkPAYvBw7H72Yu1tFPkwoTucIih3Nj144p8BO009vg4LiMm
stripe.keys.secret=sk_test_51IeOOQGrSShEYYrv8uFn75zXouJfWINGF4pV0TW26UKO7kPNvZwWIg3oCVW9xKNBs0fMbqxzNLkAiRIyMaSNfCSK00TWwHg8Lh


# image wala kaam
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads



# amazon s3

amazonProperties.endpointUrl=https://s3.us-east-2.amazonaws.com
amazonProperties.accessKey=AKIAXGI6BZWA7KR3IZMX
amazonProperties.secretKey=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
amazonProperties.bucketName=thejackter